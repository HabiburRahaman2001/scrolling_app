# Build and test


# name: Build

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [18.x, 20.x, 22.x]

#     steps:
#     - uses: actions/checkout@v4
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - name: "Installing dependecies"
#       run: npm ci
    
#     - name: "Building project"
#       run: npm run build

#   unit-test:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [18.x, 20.x, 22.x]

#     steps:
#     - uses: actions/checkout@v4
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
#     - name: "Installing dependecies"
#       run: npm ci
    
#     - name: "Running test cases"
#       run: npm run test




   
# Build Apk

# name: Build project after push

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3

#       - name: set up JDK 11
#         uses: actions/setup-java@v3
#         with:
#           java-version: '11'
#           distribution: 'temurin'
#           cache: gradle

#       - name: Grant execute permission for gradlew
#         run: chmod +x gradlew

#       - name: Build with Gradle
#         run: ./gradlew build

#       - name: Build debug APK
#         run: bash ./gradlew assembleDebug --stacktrace

#       - name: Check files
#         run: ls -al app/build/outputs/apk/debug

#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.TOKEN }}
#         with:
#           tag_name: ${{ github.run_number }}
#           release_name: ${{ github.event.repository.name }} v${{ github.run_number }}

#       - name: Upload Release APK
#         id: upload_release_asset
#         uses: actions/upload-release-asset@v1.0.1
#         env:
#           GITHUB_TOKEN: ${{ secrets.TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: app/build/outputs/apk/debug/app-debug.apk
#           asset_name: ${{ github.event.repository.name }}.apk
#           asset_content_type: application/vnd.android.package-archive
















name: Build and Deploy React App

permissions:
  contents: write  # Grant write permissions to the GitHub Actions bot

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x' # You can adjust this to the version you're using

    # Install dependencies
    - name: Install dependencies
      run: npm install

    # Build the project
    - name: Build project
      run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    # Checkout repository (again for deploy step)
    - name: Checkout repository
      uses: actions/checkout@v3

    # Deploy to GitHub Pages or a custom server (example below for GitHub Pages)
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build
